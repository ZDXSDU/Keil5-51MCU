C51 COMPILER V9.60.7.0   LCD1602                                                           09/15/2023 08:23:18 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\L
                    -CD1602.lst) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <STC89C5xRC.H>
   2          #define LCD_DataPort P0
   3          sbit LCD_RS = P2^6;
   4          sbit LCD_RW = P2^5;
   5          sbit LCD_EN = P2^7;
   6          void LCD_Delay()
   7          {
   8   1              unsigned char data i, j;
   9   1              i = 2;
  10   1              j = 199;
  11   1              do
  12   1              {
  13   2                      while (--j);
  14   2              } while (--i);
  15   1      
  16   1      }
  17          void LCD_WriteCommand(unsigned char Command)
  18          {
  19   1              LCD_RS = 0;
  20   1              LCD_RW = 0;
  21   1              LCD_DataPort = Command;
  22   1              LCD_EN = 1;
  23   1              LCD_Delay();
  24   1              LCD_EN = 0;
  25   1              LCD_Delay();
  26   1      }
  27          void LCD_WriteData(unsigned char Data)
  28          {
  29   1              LCD_RS = 1;
  30   1              LCD_RW = 0;
  31   1              LCD_DataPort = Data;
  32   1              LCD_EN = 1;
  33   1              LCD_Delay();
  34   1              LCD_EN = 0;
  35   1              LCD_Delay();
  36   1      }
  37          void LCD_SetCursor(unsigned char Line, unsigned char Column)
  38          {
  39   1              if(Line == 1)
  40   1              {
  41   2                      LCD_WriteCommand(0x80 | (Column - 1));
  42   2              }
  43   1              else if(Line == 2)
  44   1              {
  45   2                      LCD_WriteCommand(0x80 | (Column - 1 + 0x40));
  46   2              }
  47   1      }
  48          void LCD_Init()
  49          {
  50   1              LCD_WriteCommand(0x38);
  51   1              LCD_WriteCommand(0x0c);
  52   1              LCD_WriteCommand(0x06);
  53   1              LCD_WriteCommand(0x01);
  54   1      }
C51 COMPILER V9.60.7.0   LCD1602                                                           09/15/2023 08:23:18 PAGE 2   

  55          void LCD_ShowChar(unsigned char Line, unsigned char Column, char Char)
  56          {
  57   1              LCD_SetCursor(Line, Column);
  58   1              LCD_WriteData(Char);
  59   1      }
  60          
  61          void LCD_ShowString(unsigned char Line, unsigned char Column, char *String)
  62          {
  63   1              unsigned char i;
  64   1              LCD_SetCursor(Line, Column);
  65   1              for(i = 0; String[i] != '\0'; i++)
  66   1              {
  67   2                      LCD_WriteData(String[i]);
  68   2              }
  69   1      }
  70          int LCD_Pow(int X, int Y)
  71          {
  72   1              unsigned char i;
  73   1              int Result = 1;
  74   1              for(i = 0; i < Y; i++)
  75   1              {
  76   2                      Result *= X;
  77   2              }
  78   1              return Result;
  79   1      }
  80          void LCD_ShowNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
  81          {
  82   1              unsigned char i;
  83   1              LCD_SetCursor(Line,Column);
  84   1              for(i = Length; i > 0; i--)
  85   1              {
  86   2                      LCD_WriteData(Number / LCD_Pow(10, i - 1) % 10 + '0');
  87   2              }
  88   1      }
  89          void LCD_ShowSignedNum(unsigned char Line, unsigned char Column, int Number, unsigned char Length)
  90          {
  91   1              unsigned char i;
  92   1              unsigned int Number1;
  93   1              LCD_SetCursor(Line, Column);
  94   1              if(Number >= 0)
  95   1              {
  96   2                      LCD_WriteData('+');
  97   2                      Number1 = Number;
  98   2              }
  99   1              else
 100   1              {
 101   2                      LCD_WriteData('-');
 102   2                      Number1 = -Number;
 103   2              }
 104   1              for(i = Length; i > 0; i--)
 105   1              {
 106   2                      LCD_WriteData(Number1 / LCD_Pow(10, i - 1) % 10 + '0');
 107   2              }
 108   1      }
 109          void LCD_ShowHexNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 110          {
 111   1              unsigned char i, SingleNumber;
 112   1              LCD_SetCursor(Line, Column);
 113   1              for(i = Length; i > 0; i--)
 114   1              {
 115   2                      SingleNumber = Number / LCD_Pow(16, i - 1) % 16;
 116   2                      if(SingleNumber < 10)
C51 COMPILER V9.60.7.0   LCD1602                                                           09/15/2023 08:23:18 PAGE 3   

 117   2                      {
 118   3                              LCD_WriteData(SingleNumber + '0');
 119   3                      }
 120   2                      else
 121   2                      {
 122   3                              LCD_WriteData(SingleNumber - 10 + 'A');
 123   3                      }
 124   2              }
 125   1      }
 126          void LCD_ShowBinNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 127          {
 128   1              unsigned char i;
 129   1              LCD_SetCursor(Line, Column);
 130   1              for(i = Length; i > 0; i--)
 131   1              {
 132   2                      LCD_WriteData(Number / LCD_Pow(2, i - 1) % 2 + '0');
 133   2              }
 134   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    393    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
